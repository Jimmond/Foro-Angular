{"version":3,"sources":["ng://angular-file-uploader/lib/angular-file-uploader.service.ts","null","ng://angular-file-uploader/lib/angular-file-uploader.component.ts","ng://angular-file-uploader/lib/angular-file-uploader.module.ts"],"names":["AngularFileUploaderService","Injectable","args","providedIn","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AngularFileUploaderComponent","config","resetUpload","ApiResponse","EventEmitter","idDate","Date","reg","selectedFiles","notAllowedList","Caption","singleFile","progressBarShow","uploadBtn","uploadMsg","afterUpload","uploadClick","ngOnChanges","rst","theme","id","parseInt","toString","split","Math","floor","random","hideProgressBar","hideResetBtn","hideSelectBtn","maxSize","uploadAPI","formatsAllowed","multiple","headers","defaultReplaceTextsValues","selectFileBtn","resetBtn","dragNDropBox","attachPinBtn","afterUploadMsg_success","afterUploadMsg_error","replaceTexts","currentValue","resetFileUpload","ngOnInit","onChange","event","formatsCount","file","currentFileExt","ext","frmtAllowed","match","RegExp","type","dataTransfer","files","target","srcElement","exec","name","j","toLowerCase","size","push","fileName","fileSize","convertSize","errorMsg","uploadFiles","percentComplete","value","_this","isError","xhr","XMLHttpRequest","formData","FormData","undefined","append","onreadystatechange","evnt","readyState","status","uploadMsgText","uploadMsgClass","emit","upload","onprogress","lengthComputable","round","loaded","total","onload","onerror","open","_a","__values","o","m","Symbol","iterator","next","done","tslib_1.__values","keys","_b","key","setRequestHeader","send","removeFile","sf_na","splice","toFixed","attachpinOnclick","document","getElementById","click","drop","stopPropagation","preventDefault","allowDrop","dropEffect","Component","selector","template","styles","Input","Output","AngularFileUploaderModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFileUploaderService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: \"angular-file-uploader\",\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\n\n    <!-- Drag n Drop theme Starts -->\n    <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\n        <div style=\"position:relative;\">\n            <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n                <p class=\"afu-dragndrop-text\">{{replaceTexts?.dragNDropBox}}</p>\n            </div>\n            <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\n        </div>\n    </div>\n    <!-- Drag n Drop theme Ends -->\n\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\" *ngIf=\"!hideSelectBtn\">{{replaceTexts?.selectFileBtn}}</label>\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\"\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\n    <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">{{replaceTexts?.resetBtn}}</button>\n    <br *ngIf=\"!hideSelectBtn\">\n    <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\n    <!--Selected file list-->\n    <div class=\"row afu-valid-file\" *ngFor=\"let sf of selectedFiles;let i=index\" >\n        <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\n        <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\n    </div>\n    <!--Invalid file list-->\n    <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedList;let j=index\">\n        <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\n    </div>\n\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <br>\n        <br>\n    </div>\n    <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>{{replaceTexts?.uploadBtn}}</button>\n    <br>\n</div>\n\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\n    <div style=\"position:relative;padding-left:6px\">\n        <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\n          {{replaceTexts?.attachPinBtn}}\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\n                [attr.multiple]=\"multiple ? '' : null\" />\n            <br>\n        </a>\n        &nbsp;\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n    </div>\n</div>\n\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\n  <div style=\"position:relative;padding-left:6px\">\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n      <p>Drag N Drop</p>\n    </div>\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n  </div>\n</div> -->\n` ,\n  styles: [`.constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}`]\n})\nexport class AngularFileUploaderComponent implements OnInit, OnChanges {\n  @Input()\n  config: any = {};\n  @Input()\n  resetUpload: boolean = this.config[\"resetUpload\"];\n  @Output()\n  ApiResponse = new EventEmitter();\n\n  theme: string;\n  id: number;\n  hideProgressBar: boolean;\n  maxSize: number;\n  uploadAPI: string;\n  formatsAllowed: string;\n  multiple: boolean;\n  headers: any;\n  hideResetBtn: boolean;\n  hideSelectBtn: boolean;\n\n  idDate: number = +new Date();\n  reg: RegExp = /(?:\\.([^.]+))?$/;\n  selectedFiles: Array<any> = [];\n  notAllowedList: Array<Object> = [];\n  Caption: Array<string> = [];\n  singleFile = true;\n  progressBarShow = false;\n  uploadBtn = false;\n  uploadMsg = false;\n  afterUpload = false;\n  uploadClick = true;\n  uploadMsgText: string;\n  uploadMsgClass: string;\n  percentComplete: number;\n  replaceTexts;\n\n  constructor() {\n    //console.log(\"id: \",this.id);\n    //console.log(\"idDate: \",this.idDate);\n    //console.log(Math.random());\n  }\n\n  ngOnChanges(rst: SimpleChanges) {\n    if (rst[\"config\"]) {\n      this.theme = this.config[\"theme\"] || \"\";\n      this.id =\n        this.config[\"id\"] ||\n        parseInt((this.idDate / 10000).toString().split(\".\")[1]) +\n          Math.floor(Math.random() * 20) * 10000;\n      this.hideProgressBar = this.config[\"hideProgressBar\"] || false;\n      this.hideResetBtn = this.config[\"hideResetBtn\"] || false;\n      this.hideSelectBtn = this.config[\"hideSelectBtn\"] || false;\n      this.maxSize = this.config[\"maxSize\"] || 20;\n      this.uploadAPI = this.config[\"uploadAPI\"][\"url\"];\n      this.formatsAllowed =\n        this.config[\"formatsAllowed\"] || \".jpg,.png,.pdf,.docx,.txt,.gif,.jpeg\";\n      this.multiple = this.config[\"multiple\"] || false;\n      this.headers = this.config[\"uploadAPI\"][\"headers\"] || {};\n      let defaultReplaceTextsValues: ReplaceTexts =  {\n        selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\n        resetBtn: 'Reset',\n        uploadBtn: 'Upload',\n        dragNDropBox: 'Drag N Drop',\n        attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\n        afterUploadMsg_success: 'Successfully Uploaded !',\n        afterUploadMsg_error: 'Upload Failed !'\n      };\n      this.replaceTexts = {...defaultReplaceTextsValues};\n      if(this.config[\"replaceTexts\"]) {\n        this.replaceTexts = {\n          ...defaultReplaceTextsValues,\n          ...this.config['replaceTexts']\n        }\n      }\n\n      //console.log(\"config: \", this.config);\n      //console.log(this.config[\"maxSize\"]);\n      //console.log(this.headers);\n      //console.log(\"rst: \", rst);\n    }\n\n    if (rst[\"resetUpload\"]) {\n      if (rst[\"resetUpload\"].currentValue === true) {\n        this.resetFileUpload();\n      }\n    }\n  }\n\n  ngOnInit() {\n    //console.log(\"Id: \", this.id);\n    this.resetUpload = false;\n  }\n\n  resetFileUpload() {\n    this.selectedFiles = [];\n    this.Caption = [];\n    this.notAllowedList = [];\n    this.uploadMsg = false;\n    this.uploadBtn = false;\n  }\n\n  onChange(event: any) {\n    //console.log(this.maxSize + this.formatsAllowed + this.multiple);\n    this.notAllowedList = [];\n    //console.log(\"onchange hit\");\n    if (this.afterUpload || !this.multiple) {\n      this.selectedFiles = [];\n      this.Caption = [];\n      this.afterUpload = false;\n    }\n    //FORMATS ALLOWED LIST\n    //console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\n    //NO OF FORMATS ALLOWED\n    let formatsCount: any;\n    formatsCount = this.formatsAllowed.match(new RegExp(\"\\\\.\", \"g\"));\n    formatsCount = formatsCount.length;\n    //console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\n    //console.log(\"-------------------------------\");\n\n    //ITERATE SELECTED FILES\n    let file: FileList;\n    if (event.type == \"drop\") {\n      file = event.dataTransfer.files;\n      //console.log(\"type: drop\");\n    } else {\n      file = event.target.files || event.srcElement.files;\n      //console.log(\"type: change\");\n    }\n    //console.log(file);\n    let currentFileExt: any;\n    let ext: any;\n    let frmtAllowed: boolean;\n    for (let i = 0; i < file.length; i++) {\n      //CHECK FORMAT\n      //CURRENT FILE EXTENSION\n      currentFileExt = this.reg.exec(file[i].name);\n      currentFileExt = currentFileExt[1];\n      //console.log(file[i].name);\n      frmtAllowed = false;\n      //FORMAT ALLOWED LIST ITERATE\n      for (let j = formatsCount; j > 0; j--) {\n        ext = this.formatsAllowed.split(\".\")[j];\n        //console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\n        if (j == formatsCount) {\n          ext = this.formatsAllowed.split(\".\")[j] + \",\";\n        } //check format\n        if (currentFileExt.toLowerCase() == ext.split(\",\")[0]) {\n          frmtAllowed = true;\n        }\n      }\n\n      if (frmtAllowed) {\n        //console.log(\"FORMAT ALLOWED\");\n        //CHECK SIZE\n        if (file[i].size > this.maxSize * 1024000) {\n          //console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\n          this.notAllowedList.push({\n            fileName: file[i].name,\n            fileSize: this.convertSize(file[i].size),\n            errorMsg: \"Invalid size\"\n          });\n          continue;\n        } else {\n          //format allowed and size allowed then add file to selectedFile array\n          this.selectedFiles.push(file[i]);\n        }\n      } else {\n        //console.log(\"FORMAT NOT ALLOWED\");\n        this.notAllowedList.push({\n          fileName: file[i].name,\n          fileSize: this.convertSize(file[i].size),\n          errorMsg: \"Invalid format\"\n        });\n        continue;\n      }\n    }\n\n    if (this.selectedFiles.length !== 0) {\n      this.uploadBtn = true;\n      if (this.theme == \"attachPin\") this.uploadFiles();\n    } else {\n      this.uploadBtn = false;\n    }\n    this.uploadMsg = false;\n    this.uploadClick = true;\n    this.percentComplete = 0;\n    event.target.value = null;\n  }\n\n  uploadFiles() {\n    //console.log(this.selectedFiles);\n\n    let i: any;\n    this.progressBarShow = true;\n    this.uploadClick = false;\n    this.notAllowedList = [];\n    let isError = false;\n\n    let xhr = new XMLHttpRequest();\n    let formData = new FormData();\n\n    for (i = 0; i < this.selectedFiles.length; i++) {\n      if (this.Caption[i] == undefined)\n        this.Caption[i] = \"file\" + i;\n      //Add DATA TO BE SENT\n      formData.append(\n        this.Caption[i],\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\n      );\n      //console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\n    }\n\n    if (i > 1) {\n      this.singleFile = false;\n    } else {\n      this.singleFile = true;\n    }\n\n    xhr.onreadystatechange = evnt => {\n      //console.log(\"onready\");\n      if (xhr.readyState === 4) {\n        if (xhr.status !== 200 && xhr.status !== 201) {\n          isError = true;\n          this.progressBarShow = false;\n          this.uploadBtn = false;\n          this.uploadMsg = true;\n          this.afterUpload = true;\n          this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\n          this.uploadMsgClass = \"text-danger lead\";\n          //console.log(this.uploadMsgText);\n          //console.log(evnt);\n        }\n        this.ApiResponse.emit(xhr);\n      }\n    };\n\n    xhr.upload.onprogress = evnt => {\n      this.uploadBtn = false; // button should be disabled by process uploading\n      if (evnt.lengthComputable) {\n        this.percentComplete = Math.round((evnt.loaded / evnt.total) * 100);\n      }\n      //console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\n    };\n\n    xhr.onload = evnt => {\n      //console.log(\"onload\");\n      //console.log(evnt);\n      this.progressBarShow = false;\n      this.uploadBtn = false;\n      this.uploadMsg = true;\n      this.afterUpload = true;\n      if (!isError) {\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\n        this.uploadMsgClass = \"text-success lead\";\n        //console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\n      }\n    };\n\n    xhr.onerror = evnt => {\n      //console.log(\"onerror\");\n      //console.log(evnt);\n    };\n\n    xhr.open(\"POST\", this.uploadAPI, true);\n    for (const key of Object.keys(this.headers)) {\n      // Object.keys will give an Array of keys\n      xhr.setRequestHeader(key, this.headers[key]);\n    }\n    //let token = sessionStorage.getItem(\"token\");\n    //xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    //xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n    xhr.send(formData);\n  }\n\n  removeFile(i: any, sf_na: any) {\n    //console.log(\"remove file clicked \" + i)\n    if (sf_na == \"sf\") {\n      this.selectedFiles.splice(i, 1);\n      this.Caption.splice(i, 1);\n    } else {\n      this.notAllowedList.splice(i, 1);\n    }\n\n    if (this.selectedFiles.length == 0) {\n      this.uploadBtn = false;\n    }\n  }\n\n  convertSize(fileSize: number) {\n    //console.log(fileSize + \" - \"+ str);\n    return fileSize < 1024000\n      ? (fileSize / 1024).toFixed(2) + \" KB\"\n      : (fileSize / 1024000).toFixed(2) + \" MB\";\n  }\n\n  attachpinOnclick() {\n    //console.log(\"ID: \", this.id);\n    document.getElementById(\"sel\" + this.id)!.click();\n    //$(\"#\"+\"sel\"+this.id).click();\n  }\n\n  drop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    //console.log(\"drop: \", event);\n    //console.log(\"drop: \", event.dataTransfer.files);\n    this.onChange(event);\n  }\n  allowDrop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"copy\";\n    //console.log(\"allowDrop: \",event)\n  }\n}\n\n/* interface CONFIG {\n  uploadAPI: string;\n  multiple?: boolean;\n  formatsAllowed?: string;\n  maxSize?: number;\n  id?: number;\n  resetUpload?: boolean;\n  theme?: string;\n  hideProgressBar?: boolean;\n }\n */\n\n interface ReplaceTexts {\n  selectFileBtn: string,\n  resetBtn: string,\n  uploadBtn: string,\n  dragNDropBox: string,\n  attachPinBtn: string,\n  afterUploadMsg_success: string,\n  afterUploadMsg_error: string,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AngularFileUploaderComponent],\n  exports: [AngularFileUploaderComponent]\n})\nexport class AngularFileUploaderModule { }\n"]}