(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@nowzoo/sheetload'), require('@angular/common/http'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@nowzoo/ngx-highlight-js', ['exports', '@angular/core', '@nowzoo/sheetload', '@angular/common/http', '@angular/common'], factory) :
    (factory((global.nowzoo = global.nowzoo || {}, global.nowzoo['ngx-highlight-js'] = {}),global.ng.core,null,global.ng.common.http,global.ng.common));
}(this, (function (exports,i0,sheetload,http,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ NGX_HIGHLIGHT_JS_URL = new i0.InjectionToken('The base url for highlight.js');
    var /** @type {?} */ NGX_HIGHLIGHT_JS_DEFAULT_THEME = new i0.InjectionToken('The default theme for highlight.js');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxHighlightJsThemeService = (function () {
        function NgxHighlightJsThemeService(_defaultTheme, _jsURL) {
            this._defaultTheme = _defaultTheme;
            this._jsURL = _jsURL;
            this._theme = 'default';
            this._initializedPromise = null;
            this._linkEl = null;
            this._theme = _defaultTheme;
        }
        /**
         * @return {?}
         */
        NgxHighlightJsThemeService.prototype.initialized = /**
         * @return {?}
         */
            function () {
                if (!this._initializedPromise) {
                    this._initializedPromise = this.loadTheme(this._theme);
                }
                return this._initializedPromise;
            };
        /**
         * @param {?} name
         * @return {?}
         */
        NgxHighlightJsThemeService.prototype.loadTheme = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                var _this = this;
                var /** @type {?} */ url = this._jsURL + "/styles/" + name + ".min.css";
                return sheetload.Sheetload.load(url)
                    .then(function (linkEl) {
                    if (_this._linkEl) {
                        _this._linkEl.remove();
                    }
                    _this._linkEl = linkEl;
                    _this._linkEl.removeAttribute('disabled');
                });
            };
        Object.defineProperty(NgxHighlightJsThemeService.prototype, "theme", {
            get: /**
             * @return {?}
             */ function () {
                return this._theme;
            },
            enumerable: true,
            configurable: true
        });
        NgxHighlightJsThemeService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        NgxHighlightJsThemeService.ctorParameters = function () {
            return [
                { type: String, decorators: [{ type: i0.Inject, args: [NGX_HIGHLIGHT_JS_DEFAULT_THEME,] }] },
                { type: String, decorators: [{ type: i0.Inject, args: [NGX_HIGHLIGHT_JS_URL,] }] }
            ];
        };
        /** @nocollapse */ NgxHighlightJsThemeService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHighlightJsThemeService_Factory() { return new NgxHighlightJsThemeService(i0.inject(NGX_HIGHLIGHT_JS_DEFAULT_THEME), i0.inject(NGX_HIGHLIGHT_JS_URL)); }, token: NgxHighlightJsThemeService, providedIn: "root" });
        return NgxHighlightJsThemeService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxHighlightJsScriptService = (function () {
        function NgxHighlightJsScriptService(_jsURL) {
            this._jsURL = _jsURL;
            this._hljs = null;
            this._loadedLanguages = new Map();
        }
        /**
         * @return {?}
         */
        NgxHighlightJsScriptService.prototype.loaded = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this._loadedPromise) {
                    return this._loadedPromise;
                }
                this._loadedPromise = new Promise(function (resolve, reject) {
                    var /** @type {?} */ url = _this._jsURL + "/highlight.min.js";
                    sheetload.Scriptload.load(url)
                        .then(function () {
                        setTimeout(function () {
                            _this._hljs = window['hljs'];
                            resolve(_this._hljs);
                        }, 10);
                    })
                        .catch(reject);
                });
                return this._loadedPromise;
            };
        /**
         * @param {?} lang
         * @return {?}
         */
        NgxHighlightJsScriptService.prototype.loadLanguage = /**
         * @param {?} lang
         * @return {?}
         */
            function (lang) {
                var /** @type {?} */ p = this._loadedLanguages.get(lang);
                if (p) {
                    return p;
                }
                if (this._hljs && this._hljs.listLanguages().indexOf(lang) > -1) {
                    p = Promise.resolve();
                    this._loadedLanguages.set(lang, p);
                    return p;
                }
                var /** @type {?} */ url = this._jsURL + "/languages/" + lang + ".min.js";
                p = this.loaded()
                    .then(function () {
                    return sheetload.Scriptload.load(url);
                });
                this._loadedLanguages.set(lang, p);
                return p;
            };
        NgxHighlightJsScriptService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        NgxHighlightJsScriptService.ctorParameters = function () {
            return [
                { type: String, decorators: [{ type: i0.Inject, args: [NGX_HIGHLIGHT_JS_URL,] }] }
            ];
        };
        /** @nocollapse */ NgxHighlightJsScriptService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHighlightJsScriptService_Factory() { return new NgxHighlightJsScriptService(i0.inject(NGX_HIGHLIGHT_JS_URL)); }, token: NgxHighlightJsScriptService, providedIn: "root" });
        return NgxHighlightJsScriptService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxHighlightJsService = (function () {
        function NgxHighlightJsService(themeService, scriptService) {
            this.themeService = themeService;
            this.scriptService = scriptService;
        }
        Object.defineProperty(NgxHighlightJsService.prototype, "theme", {
            get: /**
             * @return {?}
             */ function () {
                return this.themeService._theme;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NgxHighlightJsService.prototype.loaded = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this._loadedPromise) {
                    return this._loadedPromise;
                }
                var /** @type {?} */ promises = [this.scriptService.loaded(), this.themeService.initialized()];
                this._loadedPromise = Promise.all(promises)
                    .then(function (results) {
                    _this._hljs = results[0];
                    return (_this._hljs);
                });
                return this._loadedPromise;
            };
        /**
         * @param {?} lang
         * @return {?}
         */
        NgxHighlightJsService.prototype.loadLanguage = /**
         * @param {?} lang
         * @return {?}
         */
            function (lang) {
                return this.scriptService.loadLanguage(lang);
            };
        /**
         * @param {?} name
         * @return {?}
         */
        NgxHighlightJsService.prototype.loadTheme = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                return this.themeService.loadTheme(name);
            };
        /**
         * @param {?} lang
         * @param {?} code
         * @return {?}
         */
        NgxHighlightJsService.prototype.highlight = /**
         * @param {?} lang
         * @param {?} code
         * @return {?}
         */
            function (lang, code) {
                var _this = this;
                return this.loaded()
                    .then(function () {
                    return _this.loadLanguage(lang);
                })
                    .then(function () {
                    var /** @type {?} */ hl = _this._hljs.highlight(lang, code, true).value;
                    return hl;
                });
            };
        NgxHighlightJsService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        NgxHighlightJsService.ctorParameters = function () {
            return [
                { type: NgxHighlightJsThemeService },
                { type: NgxHighlightJsScriptService }
            ];
        };
        /** @nocollapse */ NgxHighlightJsService.ngInjectableDef = i0.defineInjectable({ factory: function NgxHighlightJsService_Factory() { return new NgxHighlightJsService(i0.inject(NgxHighlightJsThemeService), i0.inject(NgxHighlightJsScriptService)); }, token: NgxHighlightJsService, providedIn: "root" });
        return NgxHighlightJsService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxHighlightJsComponent = (function () {
        function NgxHighlightJsComponent(service, http$$1) {
            this.service = service;
            this.http = http$$1;
            this.highlightedHTML = '';
            this.error = null;
            this.afterInit = false;
        }
        /**
         * @return {?}
         */
        NgxHighlightJsComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.onChange();
                this.afterInit = true;
            };
        /**
         * @param {?} changes
         * @return {?}
         */
        NgxHighlightJsComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                if (this.afterInit) {
                    this.onChange();
                }
            };
        /**
         * @return {?}
         */
        NgxHighlightJsComponent.prototype.fetchText = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (!this.url) {
                    return Promise.resolve(this.code || '');
                }
                return new Promise(function (resolve, reject) {
                    _this.http.get(_this.url, { responseType: 'text' }).subscribe(function (text) { return resolve(text); }, function (err) { return reject(err); });
                });
            };
        /**
         * @return {?}
         */
        NgxHighlightJsComponent.prototype.onChange = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.error = null;
                this.isInitializing = true;
                this.fetchText()
                    .then(function (text) {
                    return _this.service.highlight(_this.lang, text);
                })
                    .then(function (hl) {
                    _this.highlightedHTML = hl;
                    _this.isInitializing = false;
                })
                    .catch(function (e) {
                    _this.error = e.toString();
                    _this.isInitializing = false;
                });
            };
        NgxHighlightJsComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'ngx-highlight-js',
                        exportAs: "ngxHighlightJs",
                        template: "<pre><code\n      [ngClass]=\"'hljs ' + lang\"\n      [innerHTML]=\"highlightedHTML\"></code></pre>",
                    },] },
        ];
        /** @nocollapse */
        NgxHighlightJsComponent.ctorParameters = function () {
            return [
                { type: NgxHighlightJsService },
                { type: http.HttpClient }
            ];
        };
        NgxHighlightJsComponent.propDecorators = {
            code: [{ type: i0.Input }],
            url: [{ type: i0.Input }],
            lang: [{ type: i0.Input }]
        };
        return NgxHighlightJsComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxHighlightJsModule = (function () {
        function NgxHighlightJsModule() {
        }
        /**
         * @return {?}
         */
        NgxHighlightJsModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: NgxHighlightJsModule,
                    providers: [
                        NgxHighlightJsThemeService,
                        NgxHighlightJsScriptService,
                        NgxHighlightJsService,
                        { provide: NGX_HIGHLIGHT_JS_URL, useValue: '//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0' },
                        { provide: NGX_HIGHLIGHT_JS_DEFAULT_THEME, useValue: 'default' },
                    ]
                };
            };
        NgxHighlightJsModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            http.HttpClientModule
                        ],
                        declarations: [NgxHighlightJsComponent],
                        exports: [NgxHighlightJsComponent],
                    },] },
        ];
        return NgxHighlightJsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.NGX_HIGHLIGHT_JS_URL = NGX_HIGHLIGHT_JS_URL;
    exports.NGX_HIGHLIGHT_JS_DEFAULT_THEME = NGX_HIGHLIGHT_JS_DEFAULT_THEME;
    exports.NgxHighlightJsService = NgxHighlightJsService;
    exports.NgxHighlightJsModule = NgxHighlightJsModule;
    exports.ɵb = NgxHighlightJsScriptService;
    exports.ɵa = NgxHighlightJsThemeService;
    exports.ɵc = NgxHighlightJsComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,