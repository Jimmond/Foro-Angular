{"version":3,"sources":["ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js-options.ts","ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js-theme.service.ts","ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js-script.service.ts","ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js.service.ts","ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js.component.ts","ng://@nowzoo/ngx-highlight-js/lib/ngx-highlight-js.module.ts"],"names":["NGX_HIGHLIGHT_JS_URL","InjectionToken","NGX_HIGHLIGHT_JS_DEFAULT_THEME","NgxHighlightJsThemeService","_defaultTheme","_jsURL","this","_theme","prototype","initialized","_initializedPromise","loadTheme","name","_this","url","Sheetload","load","then","linkEl","_linkEl","remove","removeAttribute","Object","defineProperty","Injectable","args","providedIn","Inject","NgxHighlightJsScriptService","_loadedLanguages","Map","loaded","_loadedPromise","Promise","resolve","reject","Scriptload","setTimeout","_hljs","window","catch","loadLanguage","lang","p","get","listLanguages","indexOf","set","NgxHighlightJsService","themeService","scriptService","promises","all","results","highlight","code","value","NgxHighlightJsComponent","service","http","ngOnInit","onChange","afterInit","ngOnChanges","changes","fetchText","responseType","subscribe","text","err","error","isInitializing","hl","highlightedHTML","e","toString","Component","selector","exportAs","template","HttpClient","Input","NgxHighlightJsModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","HttpClientModule","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\nexport const NGX_HIGHLIGHT_JS_URL = new InjectionToken<string>('The base url for highlight.js');\nexport const NGX_HIGHLIGHT_JS_DEFAULT_THEME = new InjectionToken<string>('The default theme for highlight.js');\n","import { Injectable, Inject } from '@angular/core';\nimport { Sheetload } from '@nowzoo/sheetload';\nimport {\n  NGX_HIGHLIGHT_JS_DEFAULT_THEME,\n  NGX_HIGHLIGHT_JS_URL\n} from './ngx-highlight-js-options';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHighlightJsThemeService {\n  _theme = 'default';\n  _initializedPromise: Promise<void> = null;\n  _linkEl: HTMLLinkElement = null;\n  constructor(\n    @Inject(NGX_HIGHLIGHT_JS_DEFAULT_THEME) private _defaultTheme: string,\n    @Inject(NGX_HIGHLIGHT_JS_URL) private _jsURL: string\n  ) {\n    this._theme = _defaultTheme;\n  }\n\n  initialized(): Promise<void> {\n    if (! this._initializedPromise) {\n      this._initializedPromise = this.loadTheme(this._theme);\n    }\n    return this._initializedPromise;\n  }\n\n  loadTheme(name: string): Promise<void> {\n    const url = `${this._jsURL}/styles/${name}.min.css`;\n    return Sheetload.load(url)\n      .then((linkEl: HTMLLinkElement) => {\n        if (this._linkEl) {\n          this._linkEl.remove();\n        }\n        this._linkEl = linkEl;\n        this._linkEl.removeAttribute('disabled');\n      });\n  }\n\n  get theme(): string {\n    return this._theme;\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Scriptload } from '@nowzoo/sheetload';\n\nimport {\n  NGX_HIGHLIGHT_JS_URL\n} from './ngx-highlight-js-options';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHighlightJsScriptService {\n  _loadedLanguages: Map<string, Promise<any>>;\n  _hljs: any = null;\n  _loadedPromise: Promise<any>;\n  constructor(\n    @Inject(NGX_HIGHLIGHT_JS_URL) private _jsURL: string\n  ) {\n    this._loadedLanguages = new Map();\n  }\n\n  loaded(): Promise<any> {\n    if (this._loadedPromise) {\n      return this._loadedPromise;\n    }\n    this._loadedPromise = new Promise((resolve, reject) => {\n      const url = `${this._jsURL}/highlight.min.js`;\n      Scriptload.load(url)\n        .then(() => {\n          setTimeout(() => {\n            this._hljs = window['hljs'];\n            resolve(this._hljs);\n          }, 10);\n        })\n        .catch(reject);\n    });\n    return this._loadedPromise;\n  }\n\n  loadLanguage(lang: string): Promise<void> {\n    let p = this._loadedLanguages.get(lang);\n    if (p) {\n      return p;\n    }\n    if (this._hljs && this._hljs.listLanguages().indexOf(lang) > -1) {\n      p = Promise.resolve();\n      this._loadedLanguages.set(lang, p);\n      return p;\n    }\n    const url = `${this._jsURL}/languages/${lang}.min.js`;\n    p = this.loaded()\n      .then(() => {\n        return Scriptload.load(url);\n      });\n    this._loadedLanguages.set(lang, p);\n    return p;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxHighlightJsThemeService } from './ngx-highlight-js-theme.service';\nimport { NgxHighlightJsScriptService } from './ngx-highlight-js-script.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxHighlightJsService {\n  private _hljs: any;\n  private _loadedPromise: Promise<any>;\n\n\n  get theme(): string {\n    return this.themeService._theme;\n  }\n  constructor(\n    private themeService: NgxHighlightJsThemeService,\n    private scriptService: NgxHighlightJsScriptService\n  ) { }\n\n  loaded(): Promise<any> {\n    if (this._loadedPromise) {\n      return this._loadedPromise;\n    }\n    const promises = [this.scriptService.loaded(), this.themeService.initialized()];\n    this._loadedPromise = Promise.all(promises)\n      .then((results) => {\n        this._hljs = results[0];\n        return (this._hljs);\n      });\n    return this._loadedPromise;\n  }\n\n  loadLanguage(lang: string): Promise<void> {\n    return this.scriptService.loadLanguage(lang);\n  }\n\n  loadTheme(name: string): Promise<void> {\n    return this.themeService.loadTheme(name);\n  }\n\n  highlight(lang: string, code: string): Promise<string> {\n    return this.loaded()\n      .then(() => {\n        return this.loadLanguage(lang);\n      })\n      .then(() => {\n        const hl = this._hljs.highlight(lang, code, true).value;\n        return hl;\n      });\n  }\n\n}\n","import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { NgxHighlightJsService } from './ngx-highlight-js.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'ngx-highlight-js',\n  exportAs: `ngxHighlightJs`,\n  template: `<pre><code\n      [ngClass]=\"'hljs ' + lang\"\n      [innerHTML]=\"highlightedHTML\"></code></pre>`,\n})\nexport class NgxHighlightJsComponent implements OnInit, OnChanges {\n\n  @Input() code: string;\n  @Input() url: string;\n  @Input() lang: string;\n\n  highlightedHTML = '';\n  error: string = null;\n  isInitializing: boolean;\n\n  private afterInit = false;\n\n  constructor(\n    private service: NgxHighlightJsService,\n    private http: HttpClient,\n  ) { }\n\n  ngOnInit() {\n    this.onChange();\n    this.afterInit = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.afterInit) {\n      this.onChange();\n    }\n  }\n\n\n  fetchText(): Promise<string> {\n    if (! this.url) {\n      return Promise.resolve(this.code || '');\n    }\n    return new Promise((resolve, reject) => {\n      this.http.get(this.url, {responseType: 'text'}).subscribe(\n        (text) => resolve(text), (err) => reject(err)\n      );\n    });\n\n  }\n\n  onChange() {\n    this.error = null;\n    this.isInitializing = true;\n    this.fetchText()\n      .then((text: string) => {\n        return this.service.highlight(this.lang, text);\n      })\n      .then((hl) => {\n        this.highlightedHTML = hl;\n        this.isInitializing = false;\n      })\n      .catch(e => {\n        this.error = e.toString();\n        this.isInitializing = false;\n      });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxHighlightJsThemeService } from './ngx-highlight-js-theme.service';\nimport { NgxHighlightJsScriptService } from './ngx-highlight-js-script.service';\nimport { NgxHighlightJsService } from './ngx-highlight-js.service';\nimport {\n  NGX_HIGHLIGHT_JS_DEFAULT_THEME,\n  NGX_HIGHLIGHT_JS_URL\n} from './ngx-highlight-js-options';\nimport { NgxHighlightJsComponent } from './ngx-highlight-js.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [NgxHighlightJsComponent],\n  exports: [NgxHighlightJsComponent],\n})\nexport class NgxHighlightJsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxHighlightJsModule,\n      providers: [\n        NgxHighlightJsThemeService,\n        NgxHighlightJsScriptService,\n        NgxHighlightJsService,\n        {provide: NGX_HIGHLIGHT_JS_URL, useValue: '//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0'},\n        {provide: NGX_HIGHLIGHT_JS_DEFAULT_THEME, useValue: 'default'},\n      ]\n    };\n  }\n}\n"]}