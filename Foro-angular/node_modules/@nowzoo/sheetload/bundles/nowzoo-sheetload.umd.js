(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@nowzoo/sheetload', ['exports'], factory) :
    (factory((global.nowzoo = global.nowzoo || {}, global.nowzoo.sheetload = {})));
}(this, (function (exports) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var Elementload = (function () {
        function Elementload() {
        }
        /**
         * @param {?} el
         * @return {?}
         */
        Elementload.load = /**
         * @param {?} el
         * @return {?}
         */
            function (el) {
                var /** @type {?} */ p = new Promise(function (resolve, reject) {
                    var /** @type {?} */ head = Elementload.getHeadElement();
                    var /** @type {?} */ onLoaded = function () {
                        el.removeEventListener('load', onLoaded);
                        el.removeEventListener('error', onError);
                        resolve(el);
                    };
                    el.addEventListener('load', onLoaded);
                    var /** @type {?} */ onError = function (err) {
                        el.removeEventListener('load', onLoaded);
                        el.removeEventListener('error', onError);
                        head.removeChild(el);
                        reject(err);
                    };
                    el.addEventListener('error', onError);
                    head.appendChild(el);
                });
                return p;
            };
        /**
         * @return {?}
         */
        Elementload.getHeadElement = /**
         * @return {?}
         */
            function () {
                return document.head;
            };
        return Elementload;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var Sheetload = (function () {
        function Sheetload() {
        }
        /**
         * @param {?} url
         * @return {?}
         */
        Sheetload.load = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ link = document.createElement('link');
                link.setAttribute('rel', 'stylesheet');
                link.setAttribute('href', url);
                var /** @type {?} */ p = Elementload.load(link)
                    .then(function () {
                    link.setAttribute('disabled', 'disabled');
                    return link;
                });
                return p;
            };
        return Sheetload;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var Scriptload = (function () {
        function Scriptload() {
        }
        /**
         * @param {?} url
         * @return {?}
         */
        Scriptload.load = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ script = document.createElement('script');
                script.setAttribute('src', url);
                var /** @type {?} */ p = (Elementload.load(script));
                return p;
            };
        return Scriptload;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.Elementload = Elementload;
    exports.Sheetload = Sheetload;
    exports.Scriptload = Scriptload;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm93em9vLXNoZWV0bG9hZC51bWQuanMubWFwIiwic291cmNlcyI6WyJuZzovL0Bub3d6b28vc2hlZXRsb2FkL2xpYi9lbGVtZW50bG9hZC50cyIsIm5nOi8vQG5vd3pvby9zaGVldGxvYWQvbGliL3NoZWV0bG9hZC50cyIsIm5nOi8vQG5vd3pvby9zaGVldGxvYWQvbGliL3NjcmlwdGxvYWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY2xhc3MgRWxlbWVudGxvYWQge1xuICBzdGF0aWMgbG9hZChlbDogSFRNTEVsZW1lbnQpOiBQcm9taXNlPEhUTUxFbGVtZW50PiB7XG4gICAgY29uc3QgcDogUHJvbWlzZTxIVE1MRWxlbWVudD4gPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCBoZWFkOiBIVE1MSGVhZEVsZW1lbnQgPSBFbGVtZW50bG9hZC5nZXRIZWFkRWxlbWVudCgpO1xuICAgICAgY29uc3Qgb25Mb2FkZWQgPSAoKSA9PiB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBvbkxvYWRlZCk7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgICAgIHJlc29sdmUoZWwpO1xuICAgICAgfTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBvbkxvYWRlZCk7XG5cbiAgICAgIGNvbnN0IG9uRXJyb3IgPSAoZXJyKSA9PiB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBvbkxvYWRlZCk7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgICAgIGhlYWQucmVtb3ZlQ2hpbGQoZWwpO1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH07XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIG9uRXJyb3IpO1xuICAgICAgaGVhZC5hcHBlbmRDaGlsZChlbCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHA7XG4gIH1cbiAgc3RhdGljIGdldEhlYWRFbGVtZW50KCk6IEhUTUxIZWFkRWxlbWVudCB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmhlYWQ7XG4gIH1cbn1cbiIsImltcG9ydCB7IEVsZW1lbnRsb2FkIH0gZnJvbSAnLi9lbGVtZW50bG9hZCc7XG5cbmV4cG9ydCBjbGFzcyBTaGVldGxvYWQge1xuICBzdGF0aWMgbG9hZCh1cmw6IHN0cmluZyk6IFByb21pc2U8SFRNTExpbmtFbGVtZW50PiB7XG4gICAgY29uc3QgbGluazogSFRNTExpbmtFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpO1xuICAgIGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCAnc3R5bGVzaGVldCcpO1xuICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcbiAgICBjb25zdCBwOiBQcm9taXNlPEhUTUxMaW5rRWxlbWVudD4gPSBFbGVtZW50bG9hZC5sb2FkKGxpbmspXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGxpbmsuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgICAgICByZXR1cm4gbGluaztcbiAgICAgIH0pO1xuICAgIHJldHVybiBwO1xuICB9XG59XG4iLCJcbmltcG9ydCB7IEVsZW1lbnRsb2FkIH0gZnJvbSAnLi9lbGVtZW50bG9hZCc7XG5cbmV4cG9ydCBjbGFzcyBTY3JpcHRsb2FkIHtcbiAgc3RhdGljIGxvYWQodXJsOiBzdHJpbmcpOiBQcm9taXNlPEhUTUxTY3JpcHRFbGVtZW50PiB7XG4gICAgY29uc3Qgc2NyaXB0OiBIVE1MU2NyaXB0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3NyYycsIHVybCk7XG4gICAgY29uc3QgcDogUHJvbWlzZTxIVE1MU2NyaXB0RWxlbWVudD4gPSBFbGVtZW50bG9hZC5sb2FkKHNjcmlwdCkgYXMgUHJvbWlzZTxIVE1MU2NyaXB0RWxlbWVudD47XG4gICAgcmV0dXJuIHA7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsUUFBQTs7Ozs7OztRQUNTLGdCQUFJOzs7O1lBQVgsVUFBWSxFQUFlO2dCQUN6QixxQkFBTSxDQUFDLEdBQXlCLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07b0JBQzFELHFCQUFNLElBQUksR0FBb0IsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUMzRCxxQkFBTSxRQUFRLEdBQUc7d0JBQ2YsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQzt3QkFDekMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQzt3QkFDekMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO3FCQUNiLENBQUM7b0JBQ0YsRUFBRSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztvQkFFdEMscUJBQU0sT0FBTyxHQUFHLFVBQUMsR0FBRzt3QkFDbEIsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQzt3QkFDekMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQzt3QkFDekMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQzt3QkFDckIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO3FCQUNiLENBQUM7b0JBQ0YsRUFBRSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztvQkFDdEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztpQkFDdEIsQ0FBQyxDQUFDO2dCQUNILE9BQU8sQ0FBQyxDQUFDO2FBQ1Y7Ozs7UUFDTSwwQkFBYzs7O1lBQXJCO2dCQUNFLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQzthQUN0QjswQkF6Qkg7UUEwQkM7Ozs7OztBQzFCRCxRQUVBOzs7Ozs7O1FBQ1MsY0FBSTs7OztZQUFYLFVBQVksR0FBVztnQkFDckIscUJBQU0sSUFBSSxHQUFvQixRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM3RCxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQy9CLHFCQUFNLENBQUMsR0FBNkIsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7cUJBQ3ZELElBQUksQ0FBQztvQkFDSixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztvQkFDMUMsT0FBTyxJQUFJLENBQUM7aUJBQ2IsQ0FBQyxDQUFDO2dCQUNMLE9BQU8sQ0FBQyxDQUFDO2FBQ1Y7d0JBYkg7UUFjQzs7Ozs7O0FDYkQsUUFFQTs7Ozs7OztRQUNTLGVBQUk7Ozs7WUFBWCxVQUFZLEdBQVc7Z0JBQ3JCLHFCQUFNLE1BQU0sR0FBc0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbkUsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLHFCQUFNLENBQUMsSUFBK0IsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQStCLENBQUEsQ0FBQztnQkFDN0YsT0FBTyxDQUFDLENBQUM7YUFDVjt5QkFUSDtRQVVDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=