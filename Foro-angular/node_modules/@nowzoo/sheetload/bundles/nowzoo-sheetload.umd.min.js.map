{"version":3,"sources":["ng://@nowzoo/sheetload/lib/elementload.ts","ng://@nowzoo/sheetload/lib/sheetload.ts","ng://@nowzoo/sheetload/lib/scriptload.ts"],"names":["Elementload","load","el","Promise","resolve","reject","head","getHeadElement","onLoaded","removeEventListener","onError","addEventListener","err","removeChild","appendChild","document","Sheetload","url","link","createElement","setAttribute","then","Scriptload","script"],"mappings":"+OACA,IAAAA,EAAA,gCACSA,EAAAC,KAAP,SAAYC,GAmBV,OAlBgC,IAAIC,QAAQ,SAACC,EAASC,GACpD,IAAMC,EAAwBN,EAAYO,iBACpCC,EAAW,WACfN,EAAGO,oBAAoB,OAAQD,GAC/BN,EAAGO,oBAAoB,QAASC,GAChCN,EAAQF,IAEVA,EAAGS,iBAAiB,OAAQH,GAE5B,IAAME,EAAU,SAACE,GACfV,EAAGO,oBAAoB,OAAQD,GAC/BN,EAAGO,oBAAoB,QAASC,GAChCJ,EAAKO,YAAYX,GACjBG,EAAOO,IAETV,EAAGS,iBAAiB,QAASD,GAC7BJ,EAAKQ,YAAYZ,MAIdF,EAAAO,eAAP,WACE,OAAOQ,SAAST,QAvBpB,GCCAU,EAAA,gCACSA,EAAAf,KAAP,SAAYgB,GACV,IAAMC,EAAwBH,SAASI,cAAc,QAQrD,OAPAD,EAAKE,aAAa,MAAO,cACzBF,EAAKE,aAAa,OAAQH,GACUjB,EAAYC,KAAKiB,GAClDG,KAAK,WAEJ,OADAH,EAAKE,aAAa,WAAY,YACvBF,OARf,GCCAI,EAAA,gCACSA,EAAArB,KAAP,SAAYgB,GACV,IAAMM,EAA4BR,SAASI,cAAc,UAGzD,OAFAI,EAAOH,aAAa,MAAOH,GACWjB,EAAYC,KAAKsB,MAJ3D","sourcesContent":["\nexport class Elementload {\n  static load(el: HTMLElement): Promise<HTMLElement> {\n    const p: Promise<HTMLElement> = new Promise((resolve, reject) => {\n      const head: HTMLHeadElement = Elementload.getHeadElement();\n      const onLoaded = () => {\n        el.removeEventListener('load', onLoaded);\n        el.removeEventListener('error', onError);\n        resolve(el);\n      };\n      el.addEventListener('load', onLoaded);\n\n      const onError = (err) => {\n        el.removeEventListener('load', onLoaded);\n        el.removeEventListener('error', onError);\n        head.removeChild(el);\n        reject(err);\n      };\n      el.addEventListener('error', onError);\n      head.appendChild(el);\n    });\n    return p;\n  }\n  static getHeadElement(): HTMLHeadElement {\n    return document.head;\n  }\n}\n","import { Elementload } from './elementload';\n\nexport class Sheetload {\n  static load(url: string): Promise<HTMLLinkElement> {\n    const link: HTMLLinkElement = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', url);\n    const p: Promise<HTMLLinkElement> = Elementload.load(link)\n      .then(() => {\n        link.setAttribute('disabled', 'disabled');\n        return link;\n      });\n    return p;\n  }\n}\n","\nimport { Elementload } from './elementload';\n\nexport class Scriptload {\n  static load(url: string): Promise<HTMLScriptElement> {\n    const script: HTMLScriptElement = document.createElement('script');\n    script.setAttribute('src', url);\n    const p: Promise<HTMLScriptElement> = Elementload.load(script) as Promise<HTMLScriptElement>;\n    return p;\n  }\n}\n"]}