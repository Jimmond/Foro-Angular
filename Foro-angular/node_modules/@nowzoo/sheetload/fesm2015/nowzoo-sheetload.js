/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class Elementload {
    /**
     * @param {?} el
     * @return {?}
     */
    static load(el) {
        const /** @type {?} */ p = new Promise((resolve, reject) => {
            const /** @type {?} */ head = Elementload.getHeadElement();
            const /** @type {?} */ onLoaded = () => {
                el.removeEventListener('load', onLoaded);
                el.removeEventListener('error', onError);
                resolve(el);
            };
            el.addEventListener('load', onLoaded);
            const /** @type {?} */ onError = (err) => {
                el.removeEventListener('load', onLoaded);
                el.removeEventListener('error', onError);
                head.removeChild(el);
                reject(err);
            };
            el.addEventListener('error', onError);
            head.appendChild(el);
        });
        return p;
    }
    /**
     * @return {?}
     */
    static getHeadElement() {
        return document.head;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class Sheetload {
    /**
     * @param {?} url
     * @return {?}
     */
    static load(url) {
        const /** @type {?} */ link = document.createElement('link');
        link.setAttribute('rel', 'stylesheet');
        link.setAttribute('href', url);
        const /** @type {?} */ p = Elementload.load(link)
            .then(() => {
            link.setAttribute('disabled', 'disabled');
            return link;
        });
        return p;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class Scriptload {
    /**
     * @param {?} url
     * @return {?}
     */
    static load(url) {
        const /** @type {?} */ script = document.createElement('script');
        script.setAttribute('src', url);
        const /** @type {?} */ p = /** @type {?} */ (Elementload.load(script));
        return p;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { Elementload, Sheetload, Scriptload };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm93em9vLXNoZWV0bG9hZC5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vQG5vd3pvby9zaGVldGxvYWQvbGliL2VsZW1lbnRsb2FkLnRzIiwibmc6Ly9Abm93em9vL3NoZWV0bG9hZC9saWIvc2hlZXRsb2FkLnRzIiwibmc6Ly9Abm93em9vL3NoZWV0bG9hZC9saWIvc2NyaXB0bG9hZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBjbGFzcyBFbGVtZW50bG9hZCB7XG4gIHN0YXRpYyBsb2FkKGVsOiBIVE1MRWxlbWVudCk6IFByb21pc2U8SFRNTEVsZW1lbnQ+IHtcbiAgICBjb25zdCBwOiBQcm9taXNlPEhUTUxFbGVtZW50PiA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGhlYWQ6IEhUTUxIZWFkRWxlbWVudCA9IEVsZW1lbnRsb2FkLmdldEhlYWRFbGVtZW50KCk7XG4gICAgICBjb25zdCBvbkxvYWRlZCA9ICgpID0+IHtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uTG9hZGVkKTtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKTtcbiAgICAgICAgcmVzb2x2ZShlbCk7XG4gICAgICB9O1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uTG9hZGVkKTtcblxuICAgICAgY29uc3Qgb25FcnJvciA9IChlcnIpID0+IHtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uTG9hZGVkKTtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKTtcbiAgICAgICAgaGVhZC5yZW1vdmVDaGlsZChlbCk7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgfTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgICBoZWFkLmFwcGVuZENoaWxkKGVsKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcDtcbiAgfVxuICBzdGF0aWMgZ2V0SGVhZEVsZW1lbnQoKTogSFRNTEhlYWRFbGVtZW50IHtcbiAgICByZXR1cm4gZG9jdW1lbnQuaGVhZDtcbiAgfVxufVxuIiwiaW1wb3J0IHsgRWxlbWVudGxvYWQgfSBmcm9tICcuL2VsZW1lbnRsb2FkJztcblxuZXhwb3J0IGNsYXNzIFNoZWV0bG9hZCB7XG4gIHN0YXRpYyBsb2FkKHVybDogc3RyaW5nKTogUHJvbWlzZTxIVE1MTGlua0VsZW1lbnQ+IHtcbiAgICBjb25zdCBsaW5rOiBIVE1MTGlua0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoJ3JlbCcsICdzdHlsZXNoZWV0Jyk7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xuICAgIGNvbnN0IHA6IFByb21pc2U8SFRNTExpbmtFbGVtZW50PiA9IEVsZW1lbnRsb2FkLmxvYWQobGluaylcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gICAgICAgIHJldHVybiBsaW5rO1xuICAgICAgfSk7XG4gICAgcmV0dXJuIHA7XG4gIH1cbn1cbiIsIlxuaW1wb3J0IHsgRWxlbWVudGxvYWQgfSBmcm9tICcuL2VsZW1lbnRsb2FkJztcblxuZXhwb3J0IGNsYXNzIFNjcmlwdGxvYWQge1xuICBzdGF0aWMgbG9hZCh1cmw6IHN0cmluZyk6IFByb21pc2U8SFRNTFNjcmlwdEVsZW1lbnQ+IHtcbiAgICBjb25zdCBzY3JpcHQ6IEhUTUxTY3JpcHRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgc2NyaXB0LnNldEF0dHJpYnV0ZSgnc3JjJywgdXJsKTtcbiAgICBjb25zdCBwOiBQcm9taXNlPEhUTUxTY3JpcHRFbGVtZW50PiA9IEVsZW1lbnRsb2FkLmxvYWQoc2NyaXB0KSBhcyBQcm9taXNlPEhUTUxTY3JpcHRFbGVtZW50PjtcbiAgICByZXR1cm4gcDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7Ozs7SUFDRSxPQUFPLElBQUksQ0FBQyxFQUFlO1FBQ3pCLHVCQUFNLENBQUMsR0FBeUIsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTTtZQUMxRCx1QkFBTSxJQUFJLEdBQW9CLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUMzRCx1QkFBTSxRQUFRLEdBQUc7Z0JBQ2YsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztnQkFDekMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFDekMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ2IsQ0FBQztZQUNGLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFFdEMsdUJBQU0sT0FBTyxHQUFHLENBQUMsR0FBRztnQkFDbEIsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztnQkFDekMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFDekMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDckIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ2IsQ0FBQztZQUNGLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDdEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN0QixDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsQ0FBQztLQUNWOzs7O0lBQ0QsT0FBTyxjQUFjO1FBQ25CLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQztLQUN0QjtDQUNGOzs7Ozs7QUMxQkQ7Ozs7O0lBR0UsT0FBTyxJQUFJLENBQUMsR0FBVztRQUNyQix1QkFBTSxJQUFJLEdBQW9CLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDL0IsdUJBQU0sQ0FBQyxHQUE2QixXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzthQUN2RCxJQUFJLENBQUM7WUFDSixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUMxQyxPQUFPLElBQUksQ0FBQztTQUNiLENBQUMsQ0FBQztRQUNMLE9BQU8sQ0FBQyxDQUFDO0tBQ1Y7Q0FDRjs7Ozs7O0FDYkQ7Ozs7O0lBR0UsT0FBTyxJQUFJLENBQUMsR0FBVztRQUNyQix1QkFBTSxNQUFNLEdBQXNCLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbkUsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDaEMsdUJBQU0sQ0FBQyxxQkFBK0IsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQStCLENBQUEsQ0FBQztRQUM3RixPQUFPLENBQUMsQ0FBQztLQUNWO0NBQ0Y7Ozs7Ozs7Ozs7Ozs7OyJ9